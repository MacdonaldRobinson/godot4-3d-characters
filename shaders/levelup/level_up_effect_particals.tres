[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://v7qy3nc1q2rq"]

[ext_resource type="Texture2D" uid="uid://dmtye20es0cpj" path="res://textures/Particles/PNG (Transparent)/star_01.png" id="1_uohwe"]

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_0n48g"]
texture = ExtResource("1_uohwe")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_xgeh6"]
input_name = "color"

[sub_resource type="VisualShaderNodeBillboard" id="VisualShaderNodeBillboard_dvueq"]
keep_scale = true

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx, unshaded, shadows_disabled;

uniform sampler2D tex_frg_2;



void vertex() {
	mat4 n_out2p0;
// GetBillboardMatrix:2
	{
		mat4 __mvm = VIEW_MATRIX * mat4(INV_VIEW_MATRIX[0], INV_VIEW_MATRIX[1], INV_VIEW_MATRIX[2], MODEL_MATRIX[3]);
		__mvm = __mvm * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0), vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		n_out2p0 = __mvm;
	}


// Output:0
	MODELVIEW_MATRIX = n_out2p0;


}

void fragment() {
// Input:3
	vec4 n_out3p0 = COLOR;


// Texture2D:2
	vec4 n_out2p0 = texture(tex_frg_2, UV);


// Output:0
	ALBEDO = vec3(n_out3p0.xyz);
	ALPHA = n_out2p0.x;


}
"
graph_offset = Vector2(-245.737, 5.4888)
flags/unshaded = true
flags/shadows_disabled = true
nodes/vertex/2/node = SubResource("VisualShaderNodeBillboard_dvueq")
nodes/vertex/2/position = Vector2(60, 440)
nodes/vertex/connections = PackedInt32Array(2, 0, 0, 10)
nodes/fragment/2/node = SubResource("VisualShaderNodeTexture_0n48g")
nodes/fragment/2/position = Vector2(-100, 320)
nodes/fragment/3/node = SubResource("VisualShaderNodeInput_xgeh6")
nodes/fragment/3/position = Vector2(-140, 120)
nodes/fragment/connections = PackedInt32Array(2, 0, 0, 1, 3, 0, 0, 0)
